"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7848],{47625:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>c,toc:()=>o});var a=r(62540),i=r(43023);const n={description:"If you have been updating your tracker artifacts both via the UI and CLI/SOAP, you may optionally run the `update_artifact_textflex_carriage_return.py` script to fix the inconsistent CRLF characters that were found to exist in the text flex field data.",id:"update_artifact_textflex_carriage_return_py",keywords:["CRLF","dummy","updates"],lastUpdatedAt:"Jan 29, 2020",product:"teamforge",tags:["upgrade","scripts","site_admin_tasks","ctf_20.0"],title:"update_artifact_textflex_carriage_return.py"},s=void 0,c={id:"scripts/update_artifact_textflex_carriage_return_py",title:"update_artifact_textflex_carriage_return.py",description:"If you have been updating your tracker artifacts both via the UI and CLI/SOAP, you may optionally run the `update_artifact_textflex_carriage_return.py` script to fix the inconsistent CRLF characters that were found to exist in the text flex field data.",source:"@site/../docs/scripts/update_artifact_textflex_carriage_return_py.md",sourceDirName:"scripts",slug:"/scripts/update_artifact_textflex_carriage_return_py",permalink:"/docs/next/scripts/update_artifact_textflex_carriage_return_py",draft:!1,unlisted:!1,tags:[{inline:!0,label:"upgrade",permalink:"/docs/next/tags/upgrade"},{inline:!0,label:"scripts",permalink:"/docs/next/tags/scripts"},{inline:!0,label:"site_admin_tasks",permalink:"/docs/next/tags/site-admin-tasks"},{inline:!0,label:"ctf_20.0",permalink:"/docs/next/tags/ctf-20-0"}],version:"current",lastUpdatedAt:1721042912e3,frontMatter:{description:"If you have been updating your tracker artifacts both via the UI and CLI/SOAP, you may optionally run the `update_artifact_textflex_carriage_return.py` script to fix the inconsistent CRLF characters that were found to exist in the text flex field data.",id:"update_artifact_textflex_carriage_return_py",keywords:["CRLF","dummy","updates"],lastUpdatedAt:"Jan 29, 2020",product:"teamforge",tags:["upgrade","scripts","site_admin_tasks","ctf_20.0"],title:"update_artifact_textflex_carriage_return.py"},sidebar:"docs",previous:{title:"teamforge.py",permalink:"/docs/next/scripts/teamforgescript"},next:{title:"TeamForge Baseline",permalink:"/docs/next/BaselinePages/baseline-glossary"}},d={},o=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2}];function l(t){const e={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["Artifact updates done via the UI and CLI/SOAP were found to be saving the text flex field data (that span multiple lines) inconsistently with the ",(0,a.jsx)(e.code,{children:"\\r\\n"})," and ",(0,a.jsx)(e.code,{children:"\\n"})," CRLF characters respectively. This caused dummy updates to the text flex fields on subsequent artifact updates even if the fields were not updated."]}),"\n",(0,a.jsxs)(e.p,{children:["This issue was fixed in TeamForge 20.0. However, you can optionally run the ",(0,a.jsx)(e.code,{children:"update_artifact_textflex_carriage_return.py"})," script in case you want to fix the existing text flex field data to avert any such dummy updates from happening to existing artifacts in the future."]}),"\n",(0,a.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(e.p,{children:"Use the following command to run this script."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-shell",children:"[RUNTIME_DIR]/scripts/update_artifact_textflex_carriage_return.py [[--run|-r] | [--projectId|-p] | [--trackerId|-t] | [--help|-h]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Paramater"}),(0,a.jsx)(e.th,{children:"Description"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"-r | --run"}),(0,a.jsx)(e.td,{children:"Run the script to fix all the artifacts. Note that the script might run for quite a long time depending on the number of artifacts you have."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"-p | --projectId"}),(0,a.jsx)(e.td,{children:"Run the script to fix the artifacts in a specific project."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"-t | --trackerId"}),(0,a.jsx)(e.td,{children:"Run the script to fix the artifacts in a specific tracker."})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"-h | --help"}),(0,a.jsx)(e.td,{children:"To view help information for the script."})]})]})]}),"\n",(0,a.jsx)(e.p,{children:"This script was added in TeamForge 20.0."})]})}function p(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(l,{...t})}):l(t)}},43023:(t,e,r)=>{r.d(e,{R:()=>s,x:()=>c});var a=r(63696);const i={},n=a.createContext(i);function s(t){const e=a.useContext(n);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),a.createElement(n.Provider,{value:e},t.children)}}}]);